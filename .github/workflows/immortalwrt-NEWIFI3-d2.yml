#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
name: immortalwrt-NEWIFI3-d2

on:
  repository_dispatch:
  workflow_dispatch:
#  schedule:
#    - cron: 0 16 * * *

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-21.02
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: immortalwrt/NEWIFI3-d2/.config
  DIY_P1_SH: immortalwrt/NEWIFI3-d2/diy-part1.sh
  DIY_P2_SH: immortalwrt/NEWIFI3-d2/diy-part2.sh
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  OPENWRT_NAME: immortalwrt

jobs:
  build:
    runs-on: ubuntu-20.04
    
    steps:
    - name: Ê£ÄÊü•È°πÁõÆÂàÜÊîØ
      uses: actions/checkout@main

    - name: ÂàùÂßãÂåñÁºñËØëÁéØÂ¢É
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: ‰∏ãËΩΩÂõ∫‰ª∂Ê∫êÁ†Å
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH /opt/openwrt
         
    - name: Âä†ËΩΩfeeds.conf.default & DIY_P1_SH
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF /opt/openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        mv $GITHUB_WORKSPACE/$DIY_P1_SH /opt/openwrt/diy-part1.sh
        /opt/openwrt/diy-part1.sh
        
    - name: Êõ¥Êñ∞ & ÂÆâË£Ö feeds
      run: |
        cd /opt/openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
      
    - name: Âä†ËΩΩconfig & DIY_P2_SH
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE /opt/openwrt/.config
        chmod +x $DIY_P2_SH
        cd /opt/openwrt
        mv $GITHUB_WORKSPACE/$DIY_P2_SH /opt/openwrt/diy-part2.sh
        /opt/openwrt/diy-part2.sh

    - name: ‰∏ãËΩΩÂÆâË£ÖÂåÖ
      id: package
      run: |
        cd /opt/openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: ÁºñËØëÂõ∫‰ª∂
      id: compile
      run: |
        cd /opt/openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*TARGET_.*_(.*)_DEVICE_.*=y/\1/' > TARGET_NAME
        [ -s TARGET_NAME ] && echo "TARGET_NAME=$(cat TARGET_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d")" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: Êü•ÁúãÁ£ÅÁõò‰ΩøÁî®ÊÉÖÂÜµ
      if: (!cancelled())
      run: df -hT

    - name: Êï¥ÁêÜÊñá‰ª∂Âπ∂ÈáçÂëΩÂêç
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: | 
        cd /opt/openwrt/bin/targets/*/*
        rm -rf packages
        sudo -E apt-get -qq install rename
        rename 's/.*${{ env.TARGET_NAME }}/${{ env.FILE_DATE }}-${{ env.OPENWRT_NAME }}/' *
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
      
    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞github
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: ${{ env.FILE_DATE }}-${{ env.OPENWRT_NAME }}-${{ env.DEVICE_NAME }}
        path: ${{ env.FIRMWARE }}

    - name: ÁîüÊàêreleaseÊ†áÁ≠æ
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=${{ env.FILE_DATE }}-immortalwrt-NEWIFI3-d2" >> $GITHUB_OUTPUT
        touch release.txt
        echo "üì• Âõ∫‰ª∂‰∏ãËΩΩ" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: ÂèëÂ∏ÉËá≥release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.c8 }}
      with:
        files: ${{ env.FIRMWARE }}/*
        name: ${{ env.FILE_DATE }}-immortalwrt-NEWIFI3-d2
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
